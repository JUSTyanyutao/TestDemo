<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<jmxConfigurator />
	<property name="LOG_HOME" value="/tmp/logs/howeat"/>
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 典型的日志pattern -->
		<encoder>
			<pattern>%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
			</pattern>
			<charset>UTF-8</charset> <!-- 此处设置字符集 -->
		</encoder>
	</appender>

	<!-- 演示按时间滚动的策略 -->
	<appender name="webLogFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/web.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/web-sys.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- 保留 30天数据，默认无限 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>

		<encoder>
			<pattern>%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
			</pattern>
			<charset>UTF-8</charset> <!-- 此处设置字符集 -->
		</encoder>
	</appender>

	<!-- 综合时间与大小的滚动策略，先按小时滚动，小时内的文件大于10mb时再按大小滚动 -->
	<appender name="springLogFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/web-spring.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/web-spring-%d{yyyy-MM-dd_HH}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<encoder>
			<pattern>%d{HH:mm:ss.SSS},%msg%n</pattern>
		</encoder>
	</appender>

	<!-- shipwash-api log 使用独立的appender，不继承Root的appender -->
	<logger name="com.mxep.web" level="INFO" additivity="false">
		<appender-ref ref="webLogFile" />
	</logger>


	<logger name="org.springframework" level="ERROR" additivity="false">
		<appender-ref ref="springLogFile" />
	</logger>

	<logger name="org.apache.shiro" level="ERROR"></logger>

	<!--log4jdbc -->
	<logger name="jdbc.sqltiming" level="ERROR"/>
	<logger name="org.hibernate" level="ERROR"/>
	<!-- cxf inbound/outbound logger -->
	<logger name="org.glassfish.jersey" level="ERROR"/>

	<!-- root -->
	<root level="INFO">
		<appender-ref ref="console" />
		<appender-ref ref="webLogFile" />
	</root>
</configuration>